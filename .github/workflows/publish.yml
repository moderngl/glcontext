name: Publish

on:
  # push:
  release:
    types: [created]
  # workflow_dispatch:

jobs:
  build_wheels:
    name: Build Wheels on ${{ matrix.os }}-${{ matrix.cibw_archs }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, windows-2019, macos-10.15]
        cibw_archs: ["auto64"]
        include:
          - os: ubuntu-18.04
            cibw_archs: "aarch64"
          - os: ubuntu-18.04
            cibw_archs: "auto32"
          - os: windows-2019
            cibw_archs: "auto32"
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        if: matrix.cibw_archs == 'aarch64'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.3.1
        with:
          output-dir: dist/
        env:
          CIBW_ARCHS_MACOS: "x86_64 universal2"
          CIBW_BUILD: cp37-* cp38-* cp39-* cp310-* cp311-* pp*
          CIBW_ARCHS: ${{ matrix.cibw_archs }}
          CIBW_SKIP: "*-musllinux*"

      - uses: actions/upload-artifact@v2
        with:
          path: ./dist/*.whl
          name: wheels-${{ runner.os }}-${{ matrix.cibw_archs }}

  # Build the source distribution under Linux
  build_sdist:
    name: Source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build source distribution
        run: pipx run build --sdist

      - name: Store artifacts
        uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  publish:
    name: publish
    needs:
      - build_sdist
      - build_wheels
    runs-on: ubuntu-latest
    # if: ${{ github.event_name == 'release' && github.event.action == 'created' }}
    steps:
      - name: download
        uses: actions/download-artifact@v2
        with:
          path: temp-dist/
      # Only copy the wheels and source dist files. Additional lingering
      # files will cause issues
      - name: Copy Files to dist
        shell: bash
        run: |
          mkdir dist
          cp temp-dist/*/*.whl dist/
          cp temp-dist/*/*.tar.gz dist/
      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
